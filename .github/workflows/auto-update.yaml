name: Auto Update

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'
  push:
    branches:
      - main

jobs:
  build-geosite-json:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Fetch geosite.dat and compute SHA
        id: geosite
        run: |
          set -eux
          URL="https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
          curl -fsSL -o /tmp/geosite.dat "$URL"
          SHA=$(sha256sum /tmp/geosite.dat | cut -d ' ' -f1)
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"

      - name: Restore cache (geosite JSON)
        id: cache-json
        uses: actions/cache@v4
        with:
          path: |
            dist/geosite-json
            index.json
            data_files.md
          key: geosite-json-${{ steps.geosite.outputs.sha }}

      - name: Build geosite JSON from Loyalsoldier geosite.dat
        if: steps.cache-json.outputs.cache-hit != 'true'
        env:
          GEO_DAT_PATH: /tmp/geosite.dat
        run: npm run build:geosite

      - name: Update README
        run: |
          cat README_template.md data_files.md > README.md

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Install sing-box CLI
        run: |
          set -eux
          go install -v github.com/sagernet/sing-box/cmd/sing-box@v1.12.1
          echo "${HOME}/go/bin" >> "$GITHUB_PATH"
          sing-box version

      - name: Restore cache (SRS)
        id: cache-srs
        uses: actions/cache@v4
        with:
          path: dist/srs
          key: srs-${{ steps.geosite.outputs.sha }}-${{ vars.SRS_FILTERS }}

      - name: Build SRS rulesets
        if: steps.cache-srs.outputs.cache-hit != 'true'
        env:
          SRS_FILTERS: ${{ vars.SRS_FILTERS }}
          SRS_CONCURRENCY: ${{ vars.SRS_CONCURRENCY }}
        run: npm run build:srs

      - name: Install AWS CLI v2
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
          unzip -q /tmp/awscliv2.zip -d /tmp
          sudo /tmp/aws/install --update
          aws --version

      - name: Sync artifacts to R2 (bulk)
        if: steps.cache-json.outputs.cache-hit != 'true' || steps.cache-srs.outputs.cache-hit != 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: auto
          AWS_EC2_METADATA_DISABLED: true
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          SRS_BUCKET_NAME: ${{ vars.SRS_BUCKET_NAME }}
        run: |
          set -eux
          ls -l dist/srs || true
          if [ -z "${SRS_BUCKET_NAME:-}" ]; then
            echo "SRS_BUCKET_NAME repo variable not set; skip upload" >&2
            exit 0
          fi
          aws --version
          ENDPOINT="https://${CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com"
          aws configure set default.s3.signature_version s3v4
          aws configure set default.s3.max_concurrent_requests 64
          aws s3 sync dist/srs "s3://${SRS_BUCKET_NAME}/geosite" \
            --endpoint-url "$ENDPOINT" \
            --exclude "*" --include "*.srs" \
            --no-progress
          aws s3 sync dist/geosite-json "s3://${SRS_BUCKET_NAME}/geosite-json" \
            --endpoint-url "$ENDPOINT" \
            --no-progress
          aws s3 cp index.json "s3://${SRS_BUCKET_NAME}/geosite/index.json" \
            --endpoint-url "$ENDPOINT"

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Commit and push if necessary
        run: |
          set -e
          git add README.md
          if ! git diff --staged --quiet; then
            git commit -m "[auto] Sync with upstream (geosite.dat â†’ JSON)"
            git push
          else
            echo "No changes to commit"
          fi
